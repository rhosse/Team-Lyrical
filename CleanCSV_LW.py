# -*- coding: utf-8 -*-
"""
Created on Thu Feb  7 20:33:16 2019

CleanCSV_LW: Review the input CSV music files generated by 
            LyricsWikia_Web_Crawler_v3 and perform the following tasks:
1. Remove blank lyric records, including Artist, Genre, Band Popularity, Song,
     Year, Song Popularity, and Lyrics fields
2. Remove lyrics containing non-ASCII (printable, utf-8) record fields
3. Remove non-English rows using langdetect 1.0.7 
    (https://pypi.org/project/langdetect/), pip install langdetect
4. Remove any remaining punctuation
5. Remove instrumentals by searching for "Instrumental" or "lyrics" strings
6. Strip multiple commas from song titles
7. Remove duplicated records by checking for matching lyrics and artist
8. Not done in this function: Remove stop words

NOTE: Before running script, install langdetect using pip:
         pip install langdetect
         
@author: Paul.Devine
"""

import csv
import sys
from datetime import datetime
from langdetect import detect
import signal
import os


class GracefulKiller:
  kill_now = False
  def __init__(self):
    signal.signal(signal.SIGINT, self.exit_gracefully)
    signal.signal(signal.SIGTERM, self.exit_gracefully)

  def exit_gracefully(self,signum, frame):
    print('You pressed Ctrl+C!')
    self.kill_now = True

def FindDup2(seq, lyrics, index, band, index2):
    ''' Second version, checks both lyrics and band name.
    Locate and return a boolean indicating if a match based on the value
    passed and the sequence list indexed by the parameter index. These 
    parameters allow for completely flexible checking.'''
    
    Match = False
    for item in seq:
        if item[index] == lyrics and str(item[index2]).lower() == str(band).lower():
            Match = True
            break
    return Match

def RemoveDups(seq): 
   # Preserve sequence and check all list elements for matching records
   print("Checking and removing duplicates")
   seen = [] 
   for item in seq: # Process all songs
       if item in seen: 
           continue # Match across all fields found, don't save
       seen.append(item)
   print("Done checking")
   return seen

def isInt(s):
    try: 
        int(s)
        return True
    except ValueError:
        return False
    
def removeCommas(seq):
    ''' Remove extra commas from artist, lyric fields using the year field as a
        fixed point'''
    try:
        yearfield = 0
        for i in range(year,len(seq)):        
            # Assume it's a 4-digit year
            if len(seq[i]) == 4 and isInt(seq[i]) == True:
                yearfield = i
                break
                
        if yearfield == year: # Year in third field
            seq[lyrics:len(seq)] = [''.join(seq[lyrics:len(seq)])]
        elif yearfield > year: # Remove commas from artist field
            seq[0:yearfield] = [''.join(seq[0:yearfield])]
            if len(seq) > 4: # Check if must remove extra commas
                seq[lyrics:len(seq)] = [''.join(seq[lyrics:len(seq)])]
        else: 
            seq = ['','','','']
            
    except:
        seq = ['','','','']
    return seq

def main():
    
    input_filename = ""
    if len(sys.argv) > 1:
        env = sys.argv
        input_filename = str(env[1]) # Assume only one parameter, input filename

        print(str(datetime.now()) + " Start CleanCSV_LW Ver. 1")
        
        with open(input_filename, 'r') as inputfile:
            inputCSV_list = inputfile.readlines()
            inputfile.close() 
            
            for inputCSV_file in inputCSV_list:
                inputCSV_file = inputCSV_file.strip()
                
                if len(inputCSV_file) == 0: # don't process blank lines
                    continue
                start = datetime.now() # Restart with every CSV file read
                # Index:          0      1       2      3
                # Read columns Artist','Year','Song','Lyrics'
                with open(inputCSV_file, 'rb') as csvfileInput:

                    output_filename = inputCSV_file.replace(".csv", "(2).csv", 1)
                    print("Reading: " + inputCSV_file + ", Writing: " + output_filename)
            
                    outputCSV_list = [['Artist','Year','Song','Lyrics']]
            
                    with open(output_filename, 'w', newline='') as csvfileOutput:
                        csvwrite = csv.writer(csvfileOutput)
                        
                        inputCSV_list = csvfileInput.readlines()
                        for row in inputCSV_list:
                            if killer.kill_now == True:
                                print("exit_state TRUE")
                                sys.exit()
                            try:
                                values = row.decode('ascii').rstrip().split(',')
                                if len(values) > 4: # Check if must remove extra commas
                                    values = removeCommas(values)
                                elif isInt(values[year]) == False:
                                    continue
                                if len(values[lyrics]) == 0 or len(values[song]) == 0 or len(values[year]) == 0:
                                    continue
                                if len(str(values[lyrics]).split(' ')) <= 15:
                                    continue
                                if detect(str(values[lyrics])) != 'en':
                                    continue
                                if "Instrumental" in values[lyrics] or "lyrics" in values[lyrics]:
                                    continue

                                values[lyrics] = str(values[lyrics]).replace('[','')\
                                    .replace(']','').replace('=','').replace("\'",'')\
                                    .replace('(','').replace(')','').replace('-','')\
                                    .replace('/','').replace('\"','').replace('_','')\
                                    .replace('%','').replace('&','').replace('*','')\
                                    .replace('+','').replace('?','').replace('.','')\
                                    .replace(';','').replace('!','').replace('<b>','')\
                                    .replace('{','').replace('}','').replace('<i>','')

                                if FindDup2(outputCSV_list,values[lyrics],lyrics,values[artist],artist) == True:
                                    continue
                                outputCSV_list.append(values)

                            except: # Error encountered decoding lyrics, get next song
                                continue 
                    
                        #UniqueList = RemoveDups(outputCSV_list)
                        csvwrite.writerows(outputCSV_list)
                        end = datetime.now()
                        print("\n" + str(end) + " Finished in " + str(end-start) + \
                              ", Saved: " + str(len(outputCSV_list)) + \
                              ", Removed: " + str(len(inputCSV_list)-len(outputCSV_list)))
    else:
        print("\nUsage: python cleanCSV_LW.py <InputCSVs.txt>\n")
	
    
if __name__ == '__main__':
    killer = GracefulKiller()
    print('Press Ctrl+C to quit')
    artist = 0
    year = 1
    song = 2
    lyrics = 3

    try:
        main()
    except KeyboardInterrupt:
        pass
    