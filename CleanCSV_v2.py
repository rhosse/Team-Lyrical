# -*- coding: utf-8 -*-
"""
Created on Thu Feb  7 20:33:16 2019

CleanCSV_v2: Review the input CSV music files generated by 
             MetroLyrics_Web_Crawler and perform the following tasks:
1. Remove blank lyric records, including Artist, Genre, Band Popularity, Song,
     Year, Song Popularity, and Lyrics fields
2. Remove lyrics containing non-ASCII (printable, utf-8) record fields
3. Remove non-English rows using langdetect 1.0.7 
    (https://pypi.org/project/langdetect/), pip install langdetect
4. Remove any remaining punctuation
5. In song name, last word always is “Lyrics”, remove it
6. Remove instrumentals by searching for "instrumental" or "lyrics" strings
7. Strip multiple commas from song titles
8. Remove duplicated records
9. Not done in this function: Remove stop words

NOTE: Before running script, install langdetect using pip:
         pip install langdetect
         
@author: Paul.Devine
"""

import csv
import sys
from datetime import datetime
from langdetect import detect
import signal
import os


class GracefulKiller:
  kill_now = False
  def __init__(self):
    signal.signal(signal.SIGINT, self.exit_gracefully)
    signal.signal(signal.SIGTERM, self.exit_gracefully)

  def exit_gracefully(self,signum, frame):
    print('You pressed Ctrl+C!')
    self.kill_now = True

def RemoveDups(seq): 
   # Preserve sequence and check all list elements for matching records
   print("Checking and removing duplicates")
   seen = [] 
   for item in seq: # Process all songs
       if item in seen: 
           continue # Match across all fields found, don't save
       seen.append(item)
   print("Done checking")
   return seen

def main():

    input_filename = ""
    if len(sys.argv) > 1:
        env = sys.argv
        input_filename = str(env[1]) # Assume only one parameter, input filename
        output_filename = input_filename.replace(".csv", "(2).csv", 1)
        start = datetime.now()
        print(str(start) + " Start CleanCSV Ver. 2")
        print("Reading: " + input_filename + ", Writing: " + output_filename)
		
        # Read columns Artist,Genre,Band Popularity,Song,Year,Song Popularity,Lyrics
        with open(input_filename, 'rb') as csvfileInput:
            
            inputCSV_list = csvfileInput.readlines()
            csvfileInput.close()
            outputCSV_list = [['Artist','Genre','Band Popularity','Song','Year','Song Popularity','Lyrics']]
            
            with open(output_filename, 'w', newline='') as csvfileOutput:
                csvwrite = csv.writer(csvfileOutput)
                
                for row in inputCSV_list:
                    if killer.kill_now == True:
                        print("exit_state TRUE")
                        break
                    try:
                        values = row.decode('ascii').rstrip().split(',')
                        if len(values) > 7: # Check if must remove extra commas    
                            values[3:len(values)-3] = [''.join(values[3:len(values)-3])]
                        if len(str(values[6]).split(' ')) <= 15:
                            continue
                        if detect(str(values[6])) != 'en':
                            continue
                        if "instrumental" in values[6] or "lyrics" in values[6]:
                            continue
                        
                        values[3] = values[3].replace(" Lyrics","")
                        values[6] = str(values[6]).replace('[','')\
                            .replace(']','').replace('=','').replace("\'",'')\
                            .replace('(','').replace(')','').replace('-','')\
                            .replace('/','').replace('\"','').replace('_','')\
                            .replace('%','').replace('&','').replace('*','')\
                            .replace('+','')
                        outputCSV_list.append(values)

                    except: # Error encountered decoding lyrics, get next song
                        continue 
                    
                UniqueList = RemoveDups(outputCSV_list)
                csvwrite.writerows(UniqueList)
        end = datetime.now()
        print("\n" + str(end) + " Finished in " + str(end-start) + \
              ", Saved: " + str(len(UniqueList)) + \
              ", Removed: " + str(len(inputCSV_list)-len(UniqueList)))
    else:
        print("\nUsage: python cleanCSV_V2.py <LyricsFile.csv>\n")
	
    
if __name__ == '__main__':
    killer = GracefulKiller()
    print('Press Ctrl+C to exit')
    try:
        main()
    except KeyboardInterrupt:
        pass
    